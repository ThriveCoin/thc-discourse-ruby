name: Licenses

on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: licenses-${{ format('{0}-{1}', github.head_ref || github.run_number, github.job) }}
  cancel-in-progress: true

jobs:
  build:
    name: run
    runs-on: ubuntu-latest
    container: discourse/discourse_test:slim
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Setup Git
        run: |
          git config --global user.email "ci@ci.invalid"
          git config --global user.name "Discourse CI"

      - name: Bundler cache
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-

      - name: Setup gems
        run: |
          bundle config --local path vendor/bundle
          bundle config --local deployment true
          bundle config --local without development
          bundle install --jobs 4
          bundle clean

      - name: Setup licensed
        run: |
          gem install licensed

      - name: Get yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Check RubyGems Licenses
        if: ${{ always() }}
        run: |
          licensed cache
          licensed status

      - name: Yarn install
        run: yarn install

      - name: Check Yarn Licenses
        if: ${{ always() }}
        run: |
          yarn global add licensee
          yarn global upgrade licensee
          licensee --errors-only

      - name: Check Ember CLI Workspace Licenses
        if: ${{ always() }}
        working-directory: ./app/assets/javascripts
        run: |
          licensee --errors-only
